local function clear()
  if term.isColor and term.isColor() then
    term.setBackgroundColor(colors.black)
	term.setTextColor(colors.white)
  end
  term.clear()
  term.setCursorPos(1, 1)
end
function status(text)
	term.clearLine()
	local _, y = term.getCursorPos()
	term.setCursorPos(1, y)
	if text then
		write(text)
	end
end
local function notX(x)
	print()
	write("ERROR: Failed to "..x..". Reinstall system (Y/n)?")
	local event, key = os.pullEvent("key")
	if key == 49 then
			print(" n")	
			error("Exiting...", 0)
	else
		print(" "keys.getName(key))
		-- TODO reinstall system
		error("This is not ready, sorry!", 0)
	end
end

if CCGnu then
	notX("load os: is already loaded")
end

clear()
print("This is CCGnu Core.")
status("Starting package manager grin-get...")
shell.run("/grin/bin/grin-startup.lua")
status("Checking for core apis...")
if fs.exists("/lib/core/") and fs.isDir("/lib/core") then
		status("Loading ccgnu...")
		if fs.exists("/lib/core/CCGnu.lua") then
			if not os.loadAPI("/lib/core/CCGnu.lua") then notX("load CCGnu api") end
		else
			notX("find ccgnu")
		end
		if fs.exists("/lib/core/config.lua") then
			if not os.loadAPI("/lib/core/config.lua") then notX("load config api") end
		else
			notX("find config api")
		end
else
	notX("find core api directory")
end
status("Starting extensions...")
if not shell.run("extensions") then notX("load extensions") end
status("Modifying os.version()")
function os.version()
	return CCGnu.version_long
end
status("All done! Starting clam...")
print("")
sleep(1)
shell.run("clam.lua")